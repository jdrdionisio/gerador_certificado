# SOURCE: https://cedricscherer.netlify.app/2019/05/17/the-evolution-of-a-ggplot-ep
# Packages
required_packages <- c(
  "backports",
  "tidyverse",
  "furrr",
  "future",
  "rio",
  "pdftools",
  "officer"
)

for (pkg in required_packages) {
  # install packages if not already present
  if (!pkg %in% rownames(installed.packages())) {
    install.packages(pkg)
  }

  # load packages to this current session
  library(pkg, character.only = TRUE)
}
remove(required_packages)
remove(pkg)

wd <- getwd()


plan(multisession)
# This will use multiple cores on your machine

data <- rio::import("dataset/PresenÃ§as.xlsx"
               ,sheet = "Dados"
               )
profisionais <- unique(data$Nome)
#must put the instalation path for Libre Office -
office <- "C:/Program Files/LibreOffice/program/soffice.exe"

process_certificado <- function(nome) {
  setwd(wd)
  file_name <- paste0("outputs/Certificado-", Sys.Date(), "_", nome, ".pptx")
  # old version - Left for
  # quarto::quarto_render("certificado_formacoes.qmd",
  #               execute_params = list(
  #                 "profissional" = nome,
  #                 "file_name" = file_name,
  #                 "office_path" = office
  #               )
  # )
  data_atual <- Sys.Date()
  data_formatada <- format(data_atual, "%d de %B de %Y")
  data1 <- data |>
    filter(Nome==nome) |>
    select(-Nome) |>
    flatten_chr() |>
    na.omit()
  formacoes <- data1
  ppt <- read_pptx("template_certificado.pptx")
  slide <- add_slide(ppt, layout = "Certificado", master = "Documentos")
  # layout_properties(ppt)
  slide <- ph_with(slide, value = nome, location = ph_location_label(ph_label = "nome_profissional"))
  slide <- ph_with(slide, value = formacoes, location = ph_location_label(ph_label = "formacoes"))
  slide <- ph_with(slide, value = data_formatada, location = ph_location_label(ph_label = "data"))
  print(ppt, target = file_name)
}

future_walk(profisionais, process_certificado, .options=furrr_options(seed=T))

ficheiros <- grep("\\.pptx$",list.files("outputs"), value = T)

process_ppt <- function(nome) {
  docxtractr::convert_to_pdf(paste0("outputs/",nome), pdf_file = sub("[.]pptx", ".pdf", paste0("outputs/",nome)))
  file.remove(paste0("outputs/",nome))
}

walk(ficheiros, process_ppt)
